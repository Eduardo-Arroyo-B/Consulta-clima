---
import ClimaDescrip from "./Clima-Descrip.astro"

// Aquí se declara la función asíncrona (buscar término de asincronía) que permite llamar y extraer los datos de la API
const consultarApi = async () => {

    // try y catch es prueba y error, primero prueba que se ejecute la función y en el caso de que no lo haga se va a catch (parecido a if y else, pero no es un condicional)

    try {
        const url = "https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/Tijuana/2024-03-06/2024-03-08?unitGroup=metric&key=Z65J38JK2UB3LYJZ5KC2K9FBN&contentType=json" // Este es el link de la API a la que vamos a conectar

        const response = await fetch(url) // Conectamos a la api para extraer el json

        if (!response.ok) {
            throw new Error('Error al consultar la API') // En el caso de que la respuesta no sea OK lanza un error
        }

        const result = await response.json() // Extrae los datos json de la API

        result.days.map( day => {
            console.log("Fecha:", day.datetime)
            console.log("Temperatura:", day.temp)
            console.log("Condiciones:", day.conditions)
        })

        return result; // Devolviendo los datos de la API

    } catch (error) {
        console.log("Error al consultar la API:", error) // Manda el error en la consola
        return null;
    }

}
consultarApi()

---

<section class="contenedor">

    <ClimaDescrip
    dia="dia"
    img="/sun-solid.svg"
    grados="12"/>

    <ClimaDescrip
    dia="dia"
    img="/sun-solid.svg"
    grados="12"/>

    <ClimaDescrip
    dia="dia"
    img="/sun-solid.svg"
    grados="12"/>

    <ClimaDescrip
    dia="dia"
    img="/sun-solid.svg"
    grados="12"/>

    <ClimaDescrip
    dia="dia"
    img="/sun-solid.svg"
    grados="12"/>

    <ClimaDescrip
    dia="dia"
    img="/sun-solid.svg"
    grados="12"/>

    <ClimaDescrip
    dia="dia"
    img="/sun-solid.svg"
    grados="12"/>

</section>


<style>
    .contenedor {
    
        width: 60%;
        display: grid;
        grid-template-columns: 2fr repeat(6, 1fr);
        gap: 10px;
        background-color: #303849;
        padding: 10px;
        color: white;

    }
</style>